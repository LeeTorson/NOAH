/* BREAKPOINT
------------------------------------------ */

@mixin breakpoint($point) {
	@if $point == medium {
		@media only screen and (min-width: 50em) { @content; }
	}
	@else if $point == large {
		@media only screen and (min-width: 73.125em) { @content; }
	}
	@else if $point == retina {
		@media print, (-o-min-device-pixel-ratio: 5/4), (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 120dpi) { @content; }
	}
}
	
	
/* BORDER READIUS
------------------------------------------ */

@mixin border-radius($radius) {
  	-moz-border-radius: $radius;
  		-webkit-border-radius: $radius;
  			border-radius: $radius;
}


/* TRANSITION
------------------------------------------ */

@mixin transition ($which,$speed,$method,$delay) {
	-webkit-transition:$which $speed $method $delay;
		-moz-transition: $which $speed $method $delay;
			-o-transition: $which $speed $method $delay;
					transition: $which $speed $method $delay;
}


/* ANIMATION
------------------------------------------ */	

@mixin animation ($which,$speed,$method,$delay) {
	-webkit-animation:$which $speed $method $delay;
		-moz-animation: $which $speed $method $delay;
			-o-animation: $which $speed $method $delay;
					animation: $which $speed $method $delay;
}


/* SVG BG IMG FALLBACK
------------------------------------------ */

// Sass mixin for SVG with fallback support using the invisible gradient technique
// http://pauginer.com/post/36614680636/invisible-gradient-technique
@mixin vector-image($img, $fallback, $position: center center, $size: auto) {
	background: transparent url($fallback) $position no-repeat;
	background-image: -webkit-linear-gradient(transparent, transparent), url($img);
	background-image: linear-gradient(transparent, transparent), url($img);
	background-size: $size;
}


/* PX TO REM
------------------------------------------ */

@mixin font-size($size) {
  font-size: $size; //Fallback in px
  font-size: calculateRem($size);
}
